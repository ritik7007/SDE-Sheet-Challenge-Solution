class Solution {
    public void sortColors(int[] nums) {
        int n=nums.length;
        int low=0,mid=0,high=n-1;
        for(int i=0;i<n;i++)
        {
            switch(nums[mid])
            {
                case 0:{
                    int temp=nums[mid];
                    nums[mid]=nums[low];
                    nums[low]=temp;
                    low++;
                    mid++;
                    break;
                }

                case 1: {mid++;
                        break;}

                case 2:{
                    int temp=nums[mid];
                    nums[mid]=nums[high];
                    nums[high]=temp;
                    high--;
                    break;
                }
            }

        }
    }


}
/*
We will take three pointer and user dutch national flag algorithm.\
first pointer is low,
Second pointer is mid
and the third pointer is high.


basic intution behind this is.

starting from zeroth index to (low-1)th index everything will be zero.

starting from low to (mid-1)th index everything will be One.

starting from mid to (high-1)th index everything will be unsorted, which needs to be sorted.


staring from high to (arraylength-1)th index, i.e. last index , everything will be 2.

*/
